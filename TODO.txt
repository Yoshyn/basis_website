TODO_LIST :

+ Create FontAwesome icon helper [DONE]
  -> rewrite without ruby2 way to manage parameters. Be able to use class and not classes. [no?]

+ Create TinyRafine that manage some refine for rails. [OK]
  -> Write documentations [OK]
  -> Write some test

+ Create fake Menu for FO/BO

+ Create a basic layout for admin

+ Create a basic layout for public

+ Manage Configuration STI
  -> Configuration::WebSiteInfo
  -> Configuration::Feature
    Sample DB :
    Configuration
    kind serialize_info

+ Create a bootstrap folder into lib/assets (See my gist and helper here https://github.com/seyhunak/twitter-bootstrap-rails/)
  -> Create BootStrap::icon [DONE]
  -> Create BootStrap::DropDown [DONE]
    -> Manage the container with anotheir way? (Manage container tag and class?)
  ->  Be able to use class and not classes (after rewrite FontAwesome) [no?]
  -> Create BootStrap::Nav
  -> Create BootStrap::Modal
  -> Create BootStrap::Accordion
  -> Create BootStrap::tab
  -> Create BootStrap::Breadcrumb
    + partial app
    + before filter controller

+ Create some button helper (bootstrap?)
  -> edit_button
  -> preview_button
  -> activate_button
  -> disable_button

AFTER :

+ Create Admin::DashBoad Controller [OK]

+ Manage error page

+ Menu parser : Take a hash, return me what i have to display. This hash will be used in the _menu partial with bootstrap::nav
  Must manage :
  + Url, badge, proc
  entry
   config/admin_menu.yml
   config/public_menu.yml

+ Manage user (devise) + cancan?

+ Manage display Mode (List, full, icon) ~> Angular?